/*********************************************************************************************
FULL CPRD GOLD MASTER PIPELINE (MERGE FIRST, ENTRY/EXIT SECOND)
*********************************************************************************************/

/*********************************************************************************************
STEP 1: Set libraries
*********************************************************************************************/
libname gabidata "F:/Projects/Student/Gabriela Ochoa Gracia/Final codelist txt";
libname drug_atc "F:/Projects/Student/Gabriela Ochoa Gracia/ATC";
libname codelist "F:/Projects/Student/Gabriela Ochoa Gracia/Final codelist txt/product codelist";
libname rawdata "F:/Projects/Student/Gabriela Ochoa Gracia/CPRD_GOLD_Rawdata";
libname subsets "F:/Projects/Student/Gabriela Ochoa Gracia/Subsets_Diagnosis";
libname subs "F:/Projects/Student/Gabriela Ochoa Gracia/Subset_Product";
libname final "F:/Projects/Student/Gabriela Ochoa Gracia/Final_Dataset";

/*********************************************************************************************
STEP 2: Import GOLD Product Dictionary + Create Product Codelists
*********************************************************************************************/

data drug_atc.product_gold;
    infile 'F:/Projects/Student/Gabriela Ochoa Gracia/CPRD_GOLD_with_ATC_June2024.txt' dlm=',' firstobs=2 dsd truncover;
    informat prodcode 8. ATC $8. ProductName $150. Formulation $40.
             RouteOfAdministration $40. DrugSubstanceName $150.
             SubstanceStrength $20. BNFChapter $8. DrugIssues 8.;
    input prodcode ATC ProductName $ Formulation $ RouteOfAdministration $
          DrugSubstanceName $ SubstanceStrength $ BNFChapter $ DrugIssues;
run;

* Example codelist: SGLT2i plain;
data codelist.sglt2_p;
set drug_atc.product_gold;
where substr(ATC,1,5)="A10BK";
run;

/*********************************************************************************************
STEP 3: Create Diagnosis Subsets
*********************************************************************************************/

proc sql noprint;
    select distinct Diagnosis
    into :diag1 - :diag999
    from gabidata.GabiCodeNew;
    %let n_diag = &sqlobs;
quit;

%macro subset_by_diagnosis;
    %do i = 1 %to &n_diag;
        %let rawname = %sysfunc(strip(&&diag&i));
        %let cleanname = %sysfunc(tranwrd(&rawname, %str( ), _));
        %let cleanname = %sysfunc(compress(&cleanname, , kda));
        %let cleanname = %substr(&cleanname, 1, 22);
        data gabidata.diagnosis_&cleanname;
            set gabidata.GabiCodeNew;
            where Diagnosis = "&&diag&i";
        run;
    %end;
%mend;
%subset_by_diagnosis;

/*********************************************************************************************
STEP 4: Merge Diagnosis Subsets with CLINICAL table
*********************************************************************************************/

%macro join_with_clinical(upd_lib=gabidata, rawdata_lib=rawdata, rawdata_table=clinical, out_lib=subsets, suffix=_subset);

    proc sql noprint;
        select memname into :dslist separated by ' '
        from dictionary.tables
        where libname = upcase("&upd_lib.");
    quit;

    %let i = 1;
    %do %while(%scan(&dslist., &i) ne );
        %let dsname = %scan(&dslist., &i);
        %let shortname = %substr(&dsname, 1, 20);
        %let out_table = &out_lib..&shortname.&suffix.;

        proc sort data=&upd_lib..&dsname; by medcode; run;
        data &out_table;
            merge &rawdata_lib..&rawdata_table(in=ina)
                  &upd_lib..&dsname(in=inb);
            by medcode;
            if ina and inb;
        run;

        %let i = %eval(&i + 1);
    %end;

%mend;
%join_with_clinical();

/*********************************************************************************************
STEP 5: Merge Product Subsets with THERAPY table
*********************************************************************************************/

%macro join_with_therapy(upd_lib=codelist, rawdata_lib=rawdata, rawdata_table=therapy, out_lib=subs, suffix=_subset);

    proc sql noprint;
        select memname into :dslist separated by ' '
        from dictionary.tables
        where libname=upcase("&upd_lib.");
    quit;

    %let i = 1;
    %do %while(%scan(&dslist., &i) ne );
        %let dsname = %scan(&dslist., &i);
        %let out_table = &out_lib..&dsname.&suffix.; 

        proc sort data=&upd_lib..&dsname; by prodcode; run;
        data &out_table;            
            merge &rawdata_lib..&rawdata_table(in=ina)
                  &upd_lib..&dsname(in=inb);
            by prodcode;
            if ina and inb;  
        run;

        %let i = %eval(&i + 1);
    %end;

%mend;
%join_with_therapy();

/*********************************************************************************************
STEP 6: Merge All Subsets Together (Diagnosis + Product)
*********************************************************************************************/

* At this point you merge everything (diagnosis subsets from clinical, product subsets from therapy);
* You build your working cohort after this full merge;

/*********************************************************************************************
STEP 7: Create Entry/Exit After Merging
*********************************************************************************************/

* Merge patient file to get registration periods;
proc sort data=rawdata.patient; by pracid; run;
proc sort data=rawdata.practice; by pracid; run;

data work.patient_dates;
  merge rawdata.patient (in=ina)
        rawdata.practice (in=inb keep=pracid lcd);
  by pracid;
  if ina;
run;

* Build entry/exit after merging all subsets:
data final.study_population;
  merge work.patient_dates (in=a)
        work.merged_subsets (in=b); /* This is your merged diagnosis+products */
  by patid;

  if a and b;

  entry = max(crd, '01JAN2012'd);
  exit = min(tod, lcd, '31DEC2024'd);
  if deathdate ne . and deathdate < exit then exit = deathdate;
  if entry < exit then include=1;
run;

/*********************************************************************************************
STEP 8: Export Dataset Ready for R
*********************************************************************************************/

proc export data=final.study_population
  outfile="F:/Projects/Student/Gabriela Ochoa Gracia/final_gold_for_R.csv"
  dbms=csv replace;
run;
