/*********************************************************************************************
UPDATED CPRD AURUM PIPELINE â€” INTEGRATED DEFINITIONS (T2DM, OBESITY, OTHER ANTIDIABETICS)
*********************************************************************************************/

/*********************************************************************************************
STEP 1: Set libraries
*********************************************************************************************/
libname rawdata "F:/Projects/Student/Gabriela Ochoa Gracia/CPRD_Aurum_Simulated_data";
libname diag "F:/Projects/Student/Gabriela Ochoa Gracia/Final codelist txt";
libname drug "F:/Projects/Student/Gabriela Ochoa Gracia/Subset_Product";
libname subset_diag "F:/Projects/Student/Gabriela Ochoa Gracia/Subsets_Diagnosis";
libname final "F:/Projects/Student/Gabriela Ochoa Gracia/Final_Dataset";

/*********************************************************************************************
STEP 2: Merge Diagnosis Subsets into observation table
*********************************************************************************************/

proc sort data=diag.diagnosis_diabetestype2; by MedCodeId; run;
proc sort data=rawdata.observation; by MedCodeId; run;

* Merge T2DM diagnosis codes into observation;
data work.diabetes_diag;
  merge rawdata.observation (in=ina)
        diag.diagnosis_diabetestype2 (in=inb);
  by MedCodeId;
  if ina and inb;
run;
proc sort data=work.diabetes_diag nodupkey; by patid; run;

* Similarly merge Obesity diagnosis subset;
proc sort data=diag.diagnosis_obesity; by MedCodeId; run;
data work.obesity_diag;
  merge rawdata.observation (in=ina)
        diag.diagnosis_obesity (in=inb);
  by MedCodeId;
  if ina and inb;
run;
proc sort data=work.obesity_diag nodupkey; by patid; run;

/*********************************************************************************************
STEP 3: Merge Drug Subsets into drugissue table
*********************************************************************************************/

proc sort data=rawdata.drugissue; by ProdCodeId; run;
proc sort data=drug.all_antidiabetics; by ProdCodeId; run;

* Merge all antidiabetic drugs (for T2DM definition);
data work.antidiabetic_drugs;
  merge rawdata.drugissue (in=ina)
        drug.all_antidiabetics (in=inb);
  by ProdCodeId;
  if ina and inb;
run;
proc sort data=work.antidiabetic_drugs nodupkey; by patid; run;

* Merge additional antidiabetics (covariate);
proc sort data=drug.other_antidiabetics; by ProdCodeId; run;
data work.other_antidiab_cov;
  merge rawdata.drugissue (in=ina)
        drug.other_antidiabetics (in=inb);
  by ProdCodeId;
  if ina and inb;
run;
proc sort data=work.other_antidiab_cov nodupkey; by patid; run;

/*********************************************************************************************
STEP 4: Merge BMI measurements (obesity covariate)
*********************************************************************************************/

* Assume BMI measurements identified in observation table via MedCodeId or direct numeric value;

proc sql;
create table work.bmi as 
select patid, obsdate, value1 as BMI_value
from rawdata.observation
where MedCodeId in (/* insert your BMI measurement MedCodeIds here */)
  and value1 ne .;
quit;

* Create Obesity BMI flag;
data work.bmi_flag;
  set work.bmi;
  if BMI_value >= 30 then Obesity_BMI_flag = 1;
  else Obesity_BMI_flag = 0;
run;
proc sort data=work.bmi_flag nodupkey; by patid; run;

/*********************************************************************************************
STEP 5: Build Combined T2DM inclusion flag
*********************************************************************************************/

* Merge all T2DM components;

proc sort data=rawdata.patient; by patid; run;

data work.inclusion_merge;
  merge rawdata.patient (in=a)
        work.diabetes_diag (in=b)
        work.antidiabetic_drugs (in=c);
  by patid;
  T2DM_diagnosis_flag = b;
  Antidiabetic_drug_flag = c;
  if T2DM_diagnosis_flag = 1 or Antidiabetic_drug_flag = 1 then T2DM_flag = 1;
run;

/*********************************************************************************************
STEP 6: Build Obesity covariate (combined definition)
*********************************************************************************************/

data work.obesity_combined;
  merge work.obesity_diag (in=diag)
        work.bmi_flag (in=bmi);
  by patid;
  if diag or bmi then Obesity_flag = 1;
run;

/*********************************************************************************************
STEP 7: Build other antidiabetic covariate flag
*********************************************************************************************/

data work.other_antidiab_flag;
  set work.other_antidiab_cov;
  Other_Antidiabetic_flag = 1;
run;
proc sort data=work.other_antidiab_flag nodupkey; by patid; run;

/*********************************************************************************************
STEP 8: Merge Everything Into Final Cohort Table
*********************************************************************************************/

data final.cohort_ready;
  merge work.inclusion_merge (in=a)
        work.obesity_combined (in=b)
        work.other_antidiab_flag (in=c);
  by patid;
  if T2DM_flag = 1;
  if Obesity_flag = . then Obesity_flag = 0;
  if Other_Antidiabetic_flag = . then Other_Antidiabetic_flag = 0;
run;

/*********************************************************************************************
STEP 9: Export For R
*********************************************************************************************/

proc export data=final.cohort_ready
  outfile="F:/Projects/Student/Gabriela Ochoa Gracia/aurum_final_dataset.csv"
  dbms=csv replace;
run;
